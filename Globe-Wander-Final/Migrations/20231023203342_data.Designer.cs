// <auto-generated />
using System;
using Globe_Wander_Final.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Globe_Wander_Final.Migrations
{
    [DbContext(typeof(GlobeWanderDbContext))]
    [Migration("20231023203342_data")]
    partial class data
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Globe_Wander_Final.Models.Amenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Free Wi-Fi"
                        },
                        new
                        {
                            Id = 2,
                            Name = "TV"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Air conditioning"
                        });
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f8a28db8-fc15-42a5-acc4-43529e518f46",
                            Email = "User@example.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "USER",
                            PasswordHash = "AQAAAAIAAYagAAAAEGYOz/Zl14DwC9k9cjs/nel5AGKpN4UW9OlYg0NswKav3AIBWBKc3t9qotk43Kccmw==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "03bb4f52-17a4-490f-ad73-1d5a0a112472",
                            TwoFactorEnabled = false,
                            UserName = "User"
                        },
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "38fa939a-eb4a-4707-85b3-4c9c57173d38",
                            Email = "adminUser@example.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "adminUser@EXAMPLE.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAIAAYagAAAAEBEx4gj2M7if8kr4UmuCDjT7SPP3zr5tO0KNgu3nhE885j+ENx39dRSixK/YUoN7og==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "73ec76ac-bd07-4cc6-8d83-e73e3c7d11d8",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = "3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bb91fdf5-08d1-40e4-af44-65b96ba8d295",
                            Email = "trip@example.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "trip@EXAMPLE.COM",
                            NormalizedUserName = "TRIP",
                            PasswordHash = "AQAAAAIAAYagAAAAEFcyXqGs0xtcmo9WlBBUJzEXN/ovCphF1Sn7MgtESSqb9TSoDYXp4GVuIGOfKPd3Ag==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3ec132ab-dfb5-4c70-81a5-8fe3fd7c339a",
                            TwoFactorEnabled = false,
                            UserName = "trip"
                        },
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "beaaa819-a43e-47fe-9bd8-0b815092bb56",
                            Email = "hotel@example.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "hotel@EXAMPLE.COM",
                            NormalizedUserName = "HOTEL",
                            PasswordHash = "AQAAAAIAAYagAAAAEKFyHwXDVyh4tTlNUGFhNM+M7zRtr5il5J/qKKPEt16BP5V66CyTyh0/IWYA5u7CwA==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6d1f9625-bc9b-4868-97cf-f6322156f028",
                            TwoFactorEnabled = false,
                            UserName = "hotel"
                        });
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.BookingRoom", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("HotelID", "RoomNumber")
                        .IsUnique();

                    b.ToTable("BookingRooms");
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.BookingTrip", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("CostPerPerson")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfPersons")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TripID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("TripID");

                    b.ToTable("bookingTrips");
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.Facility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Facilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Swming pool"
                        },
                        new
                        {
                            Id = 2,
                            Name = "resturants"
                        },
                        new
                        {
                            Id = 3,
                            Name = "GYM"
                        });
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacilityId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StarRate")
                        .HasColumnType("int");

                    b.Property<int>("TourSpotID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.HasIndex("TourSpotID");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A peaceful retreat in the heart of the city",
                            Location = "amman",
                            Name = "Harmony",
                            StarRate = 4,
                            TourSpotID = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "The perfect base for your desert adventure",
                            Location = "wadi rum",
                            Name = "Adventure",
                            StarRate = 3,
                            TourSpotID = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "A luxury resort on the shores of the Dead Sea",
                            Location = "dead sea",
                            Name = "Oasis",
                            StarRate = 5,
                            TourSpotID = 3
                        },
                        new
                        {
                            Id = 4,
                            Description = "Experience the rich history of Jerash",
                            Location = "jerash",
                            Name = "Heritage",
                            StarRate = 4,
                            TourSpotID = 1
                        },
                        new
                        {
                            Id = 5,
                            Description = "Stunning sea views in a modern setting",
                            Location = "aqaba",
                            Name = "Horizon",
                            StarRate = 5,
                            TourSpotID = 2
                        });
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.HotelFacility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FacilityId")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelFacilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FacilityId = 1,
                            HotelId = 1
                        },
                        new
                        {
                            Id = 2,
                            FacilityId = 1,
                            HotelId = 2
                        },
                        new
                        {
                            Id = 3,
                            FacilityId = 2,
                            HotelId = 3
                        },
                        new
                        {
                            Id = 4,
                            FacilityId = 3,
                            HotelId = 1
                        },
                        new
                        {
                            Id = 5,
                            FacilityId = 1,
                            HotelId = 2
                        },
                        new
                        {
                            Id = 6,
                            FacilityId = 1,
                            HotelId = 3
                        },
                        new
                        {
                            Id = 7,
                            FacilityId = 2,
                            HotelId = 4
                        },
                        new
                        {
                            Id = 8,
                            FacilityId = 3,
                            HotelId = 5
                        },
                        new
                        {
                            Id = 10,
                            FacilityId = 1,
                            HotelId = 4
                        },
                        new
                        {
                            Id = 11,
                            FacilityId = 2,
                            HotelId = 5
                        });
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.HotelRoom", b =>
                {
                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.Property<int>("RoomNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomNumber"));

                    b.Property<int>("Bathrooms")
                        .HasColumnType("int");

                    b.Property<int>("Beds")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int>("SquareFeet")
                        .HasColumnType("int");

                    b.HasKey("HotelID", "RoomNumber");

                    b.HasIndex("RoomID");

                    b.ToTable("HotelRooms");

                    b.HasData(
                        new
                        {
                            HotelID = 1,
                            RoomNumber = 101,
                            Bathrooms = 1,
                            Beds = 2,
                            Description = " A spacious room with a king-size bed, modern amenities, and a beautiful city view.",
                            IsAvailable = true,
                            PricePerDay = 150.00m,
                            RoomID = 1,
                            SquareFeet = 500
                        },
                        new
                        {
                            HotelID = 1,
                            RoomNumber = 102,
                            Bathrooms = 2,
                            Beds = 2,
                            Description = " A luxurious suite with two queen-size beds, a mini bar, a private balcony with ocean views, and premium toiletries.",
                            IsAvailable = true,
                            PricePerDay = 200.00m,
                            RoomID = 2,
                            SquareFeet = 700
                        },
                        new
                        {
                            HotelID = 1,
                            RoomNumber = 103,
                            Bathrooms = 2,
                            Beds = 1,
                            Description = "A large studio with a separate living area, king-size bed, two bathrooms, and a private terrace overlooking the city.",
                            IsAvailable = true,
                            PricePerDay = 300.00m,
                            RoomID = 3,
                            SquareFeet = 1000
                        },
                        new
                        {
                            HotelID = 2,
                            RoomNumber = 201,
                            Bathrooms = 1,
                            Beds = 2,
                            Description = " A spacious room with a king-size bed, modern amenities, and a beautiful city view.",
                            IsAvailable = true,
                            PricePerDay = 150.00m,
                            RoomID = 1,
                            SquareFeet = 500
                        },
                        new
                        {
                            HotelID = 2,
                            RoomNumber = 202,
                            Bathrooms = 2,
                            Beds = 2,
                            Description = " A luxurious suite with two queen-size beds, a mini bar, a private balcony with ocean views, and premium toiletries.",
                            IsAvailable = true,
                            PricePerDay = 200.00m,
                            RoomID = 2,
                            SquareFeet = 700
                        },
                        new
                        {
                            HotelID = 2,
                            RoomNumber = 203,
                            Bathrooms = 2,
                            Beds = 1,
                            Description = "A large studio with a separate living area, king-size bed, two bathrooms, and a private terrace overlooking the city.",
                            IsAvailable = true,
                            PricePerDay = 300.00m,
                            RoomID = 3,
                            SquareFeet = 1000
                        },
                        new
                        {
                            HotelID = 3,
                            RoomNumber = 301,
                            Bathrooms = 1,
                            Beds = 2,
                            Description = " A spacious room with a king-size bed, modern amenities, and a beautiful city view.",
                            IsAvailable = true,
                            PricePerDay = 150.00m,
                            RoomID = 1,
                            SquareFeet = 500
                        },
                        new
                        {
                            HotelID = 3,
                            RoomNumber = 302,
                            Bathrooms = 2,
                            Beds = 2,
                            Description = " A luxurious suite with two queen-size beds, a mini bar, a private balcony with ocean views, and premium toiletries.",
                            IsAvailable = true,
                            PricePerDay = 200.00m,
                            RoomID = 2,
                            SquareFeet = 700
                        },
                        new
                        {
                            HotelID = 3,
                            RoomNumber = 303,
                            Bathrooms = 2,
                            Beds = 1,
                            Description = "A large studio with a separate living area, king-size bed, two bathrooms, and a private terrace overlooking the city.",
                            IsAvailable = true,
                            PricePerDay = 300.00m,
                            RoomID = 3,
                            SquareFeet = 1000
                        },
                        new
                        {
                            HotelID = 4,
                            RoomNumber = 401,
                            Bathrooms = 1,
                            Beds = 2,
                            Description = " A spacious room with a king-size bed, modern amenities, and a beautiful city view.",
                            IsAvailable = true,
                            PricePerDay = 150.00m,
                            RoomID = 1,
                            SquareFeet = 500
                        },
                        new
                        {
                            HotelID = 4,
                            RoomNumber = 402,
                            Bathrooms = 2,
                            Beds = 2,
                            Description = " A luxurious suite with two queen-size beds, a mini bar, a private balcony with ocean views, and premium toiletries.",
                            IsAvailable = true,
                            PricePerDay = 200.00m,
                            RoomID = 2,
                            SquareFeet = 700
                        },
                        new
                        {
                            HotelID = 4,
                            RoomNumber = 403,
                            Bathrooms = 2,
                            Beds = 1,
                            Description = "A large studio with a separate living area, king-size bed, two bathrooms, and a private terrace overlooking the city.",
                            IsAvailable = true,
                            PricePerDay = 300.00m,
                            RoomID = 3,
                            SquareFeet = 1000
                        },
                        new
                        {
                            HotelID = 5,
                            RoomNumber = 501,
                            Bathrooms = 1,
                            Beds = 2,
                            Description = " A spacious room with a king-size bed, modern amenities, and a beautiful city view.",
                            IsAvailable = true,
                            PricePerDay = 150.00m,
                            RoomID = 1,
                            SquareFeet = 500
                        },
                        new
                        {
                            HotelID = 5,
                            RoomNumber = 502,
                            Bathrooms = 2,
                            Beds = 2,
                            Description = " A luxurious suite with two queen-size beds, a mini bar, a private balcony with ocean views, and premium toiletries.",
                            IsAvailable = true,
                            PricePerDay = 200.00m,
                            RoomID = 2,
                            SquareFeet = 700
                        },
                        new
                        {
                            HotelID = 5,
                            RoomNumber = 503,
                            Bathrooms = 2,
                            Beds = 1,
                            Description = "A large studio with a separate living area, king-size bed, two bathrooms, and a private terrace overlooking the city.",
                            IsAvailable = true,
                            PricePerDay = 300.00m,
                            RoomID = 3,
                            SquareFeet = 1000
                        });
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("HotelId")
                        .HasColumnType("int");

                    b.Property<int?>("HotelRoomHotelID")
                        .HasColumnType("int");

                    b.Property<int?>("HotelRoomRoomNumber")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<int?>("TripId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("TripId");

                    b.HasIndex("HotelRoomHotelID", "HotelRoomRoomNumber");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg"
                        },
                        new
                        {
                            Id = 2,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg"
                        },
                        new
                        {
                            Id = 3,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image3.jpg"
                        },
                        new
                        {
                            Id = 4,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image4.jpg"
                        },
                        new
                        {
                            Id = 5,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image5.jpg"
                        },
                        new
                        {
                            Id = 6,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image3.jpg"
                        },
                        new
                        {
                            Id = 7,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image4.jpg"
                        },
                        new
                        {
                            Id = 8,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel2image2.jpg"
                        },
                        new
                        {
                            Id = 9,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel2image1.jpg"
                        },
                        new
                        {
                            Id = 10,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel2image3.jpg"
                        },
                        new
                        {
                            Id = 11,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel2image4.jpg"
                        },
                        new
                        {
                            Id = 12,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel2image5.jpg"
                        },
                        new
                        {
                            Id = 13,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel2image3.jpg"
                        },
                        new
                        {
                            Id = 14,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel2image4.jpg"
                        },
                        new
                        {
                            Id = 15,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image4.jpg"
                        },
                        new
                        {
                            Id = 16,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg"
                        },
                        new
                        {
                            Id = 17,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image3.jpg"
                        },
                        new
                        {
                            Id = 18,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg"
                        },
                        new
                        {
                            Id = 19,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image5.jpg"
                        },
                        new
                        {
                            Id = 20,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image3.jpg"
                        },
                        new
                        {
                            Id = 21,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg"
                        },
                        new
                        {
                            Id = 22,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg"
                        },
                        new
                        {
                            Id = 23,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg"
                        },
                        new
                        {
                            Id = 24,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image3.jpg"
                        },
                        new
                        {
                            Id = 25,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image4.jpg"
                        },
                        new
                        {
                            Id = 26,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image5.jpg"
                        },
                        new
                        {
                            Id = 27,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image3.jpg"
                        },
                        new
                        {
                            Id = 28,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image4.jpg"
                        },
                        new
                        {
                            Id = 29,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image3.jpg"
                        },
                        new
                        {
                            Id = 30,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg"
                        },
                        new
                        {
                            Id = 31,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg"
                        },
                        new
                        {
                            Id = 32,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image4.jpg"
                        },
                        new
                        {
                            Id = 33,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image5.jpg"
                        },
                        new
                        {
                            Id = 34,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg"
                        },
                        new
                        {
                            Id = 35,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg"
                        },
                        new
                        {
                            Id = 36,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image4.jpg",
                            RoomNumber = 101
                        },
                        new
                        {
                            Id = 37,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 101
                        },
                        new
                        {
                            Id = 38,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 101
                        },
                        new
                        {
                            Id = 39,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image3.jpg",
                            RoomNumber = 101
                        },
                        new
                        {
                            Id = 40,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image5.jpg",
                            RoomNumber = 101
                        },
                        new
                        {
                            Id = 41,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 101
                        },
                        new
                        {
                            Id = 42,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 101
                        },
                        new
                        {
                            Id = 43,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image5.jpg",
                            RoomNumber = 102
                        },
                        new
                        {
                            Id = 44,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 102
                        },
                        new
                        {
                            Id = 45,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 102
                        },
                        new
                        {
                            Id = 46,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image4.jpg",
                            RoomNumber = 102
                        },
                        new
                        {
                            Id = 47,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image3.jpg",
                            RoomNumber = 102
                        },
                        new
                        {
                            Id = 48,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 102
                        },
                        new
                        {
                            Id = 49,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 102
                        },
                        new
                        {
                            Id = 50,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image3.jpg",
                            RoomNumber = 103
                        },
                        new
                        {
                            Id = 51,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 103
                        },
                        new
                        {
                            Id = 52,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 103
                        },
                        new
                        {
                            Id = 53,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image4.jpg",
                            RoomNumber = 103
                        },
                        new
                        {
                            Id = 54,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image5.jpg",
                            RoomNumber = 103
                        },
                        new
                        {
                            Id = 55,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 103
                        },
                        new
                        {
                            Id = 56,
                            HotelId = 1,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 103
                        },
                        new
                        {
                            Id = 57,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image5.jpg",
                            RoomNumber = 201
                        },
                        new
                        {
                            Id = 58,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 201
                        },
                        new
                        {
                            Id = 59,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 201
                        },
                        new
                        {
                            Id = 60,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image4.jpg",
                            RoomNumber = 201
                        },
                        new
                        {
                            Id = 61,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image3.jpg",
                            RoomNumber = 201
                        },
                        new
                        {
                            Id = 62,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 201
                        },
                        new
                        {
                            Id = 63,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 201
                        },
                        new
                        {
                            Id = 64,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 202
                        },
                        new
                        {
                            Id = 65,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image3.jpg",
                            RoomNumber = 202
                        },
                        new
                        {
                            Id = 66,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 202
                        },
                        new
                        {
                            Id = 67,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image4.jpg",
                            RoomNumber = 202
                        },
                        new
                        {
                            Id = 68,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image5.jpg",
                            RoomNumber = 202
                        },
                        new
                        {
                            Id = 69,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 202
                        },
                        new
                        {
                            Id = 70,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 202
                        },
                        new
                        {
                            Id = 71,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 203
                        },
                        new
                        {
                            Id = 72,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 203
                        },
                        new
                        {
                            Id = 73,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image3.jpg",
                            RoomNumber = 203
                        },
                        new
                        {
                            Id = 74,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image4.jpg",
                            RoomNumber = 203
                        },
                        new
                        {
                            Id = 75,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image5.jpg",
                            RoomNumber = 203
                        },
                        new
                        {
                            Id = 76,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 203
                        },
                        new
                        {
                            Id = 77,
                            HotelId = 2,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 203
                        },
                        new
                        {
                            Id = 78,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image4.jpg",
                            RoomNumber = 301
                        },
                        new
                        {
                            Id = 79,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 301
                        },
                        new
                        {
                            Id = 80,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 301
                        },
                        new
                        {
                            Id = 81,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image3.jpg",
                            RoomNumber = 301
                        },
                        new
                        {
                            Id = 82,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image5.jpg",
                            RoomNumber = 301
                        },
                        new
                        {
                            Id = 83,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 301
                        },
                        new
                        {
                            Id = 84,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 301
                        },
                        new
                        {
                            Id = 85,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image5.jpg",
                            RoomNumber = 302
                        },
                        new
                        {
                            Id = 86,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 302
                        },
                        new
                        {
                            Id = 87,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 302
                        },
                        new
                        {
                            Id = 88,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image4.jpg",
                            RoomNumber = 302
                        },
                        new
                        {
                            Id = 89,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image3.jpg",
                            RoomNumber = 302
                        },
                        new
                        {
                            Id = 90,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 302
                        },
                        new
                        {
                            Id = 91,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 302
                        },
                        new
                        {
                            Id = 92,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 303
                        },
                        new
                        {
                            Id = 93,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 303
                        },
                        new
                        {
                            Id = 94,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 303
                        },
                        new
                        {
                            Id = 95,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image4.jpg",
                            RoomNumber = 303
                        },
                        new
                        {
                            Id = 96,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image5.jpg",
                            RoomNumber = 303
                        },
                        new
                        {
                            Id = 97,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image3.jpg",
                            RoomNumber = 303
                        },
                        new
                        {
                            Id = 98,
                            HotelId = 3,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 303
                        },
                        new
                        {
                            Id = 99,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image5.jpg",
                            RoomNumber = 401
                        },
                        new
                        {
                            Id = 100,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 401
                        },
                        new
                        {
                            Id = 101,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 401
                        },
                        new
                        {
                            Id = 102,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image4.jpg",
                            RoomNumber = 401
                        },
                        new
                        {
                            Id = 103,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image5.jpg",
                            RoomNumber = 401
                        },
                        new
                        {
                            Id = 104,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 401
                        },
                        new
                        {
                            Id = 105,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image3.jpg",
                            RoomNumber = 401
                        },
                        new
                        {
                            Id = 106,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 402
                        },
                        new
                        {
                            Id = 107,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 402
                        },
                        new
                        {
                            Id = 108,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image3.jpg",
                            RoomNumber = 402
                        },
                        new
                        {
                            Id = 109,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image4.jpg",
                            RoomNumber = 402
                        },
                        new
                        {
                            Id = 110,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image5.jpg",
                            RoomNumber = 402
                        },
                        new
                        {
                            Id = 111,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 402
                        },
                        new
                        {
                            Id = 112,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 402
                        },
                        new
                        {
                            Id = 113,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image4.jpg",
                            RoomNumber = 403
                        },
                        new
                        {
                            Id = 114,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 403
                        },
                        new
                        {
                            Id = 115,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 403
                        },
                        new
                        {
                            Id = 116,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image3.jpg",
                            RoomNumber = 403
                        },
                        new
                        {
                            Id = 117,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image5.jpg",
                            RoomNumber = 403
                        },
                        new
                        {
                            Id = 118,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 403
                        },
                        new
                        {
                            Id = 119,
                            HotelId = 4,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 403
                        },
                        new
                        {
                            Id = 120,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image5.jpg",
                            RoomNumber = 501
                        },
                        new
                        {
                            Id = 121,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 501
                        },
                        new
                        {
                            Id = 122,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 501
                        },
                        new
                        {
                            Id = 123,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image4.jpg",
                            RoomNumber = 501
                        },
                        new
                        {
                            Id = 124,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image3.jpg",
                            RoomNumber = 501
                        },
                        new
                        {
                            Id = 125,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 501
                        },
                        new
                        {
                            Id = 126,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 501
                        },
                        new
                        {
                            Id = 127,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image5.jpg",
                            RoomNumber = 502
                        },
                        new
                        {
                            Id = 128,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image3.jpg",
                            RoomNumber = 502
                        },
                        new
                        {
                            Id = 129,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 502
                        },
                        new
                        {
                            Id = 130,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 502
                        },
                        new
                        {
                            Id = 131,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image4.jpg",
                            RoomNumber = 502
                        },
                        new
                        {
                            Id = 132,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 502
                        },
                        new
                        {
                            Id = 133,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 502
                        },
                        new
                        {
                            Id = 134,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 503
                        },
                        new
                        {
                            Id = 135,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image3.jpg",
                            RoomNumber = 503
                        },
                        new
                        {
                            Id = 136,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 503
                        },
                        new
                        {
                            Id = 137,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image1.jpg",
                            RoomNumber = 503
                        },
                        new
                        {
                            Id = 138,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image4.jpg",
                            RoomNumber = 503
                        },
                        new
                        {
                            Id = 139,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image5.jpg",
                            RoomNumber = 503
                        },
                        new
                        {
                            Id = 140,
                            HotelId = 5,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/hotel1image2.jpg",
                            RoomNumber = 503
                        },
                        new
                        {
                            Id = 141,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip1.jpg",
                            TripId = 1
                        },
                        new
                        {
                            Id = 142,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip2.jpg",
                            TripId = 2
                        },
                        new
                        {
                            Id = 143,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip3.jpg",
                            TripId = 3
                        },
                        new
                        {
                            Id = 144,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip4.png",
                            TripId = 4
                        },
                        new
                        {
                            Id = 145,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip5.jpg",
                            TripId = 5
                        },
                        new
                        {
                            Id = 146,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip6.jpg",
                            TripId = 6
                        },
                        new
                        {
                            Id = 147,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip7.png",
                            TripId = 7
                        },
                        new
                        {
                            Id = 148,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip8.jpg",
                            TripId = 8
                        },
                        new
                        {
                            Id = 149,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip9.jpg",
                            TripId = 9
                        },
                        new
                        {
                            Id = 150,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip10.jpg",
                            TripId = 10
                        },
                        new
                        {
                            Id = 151,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip3.jpg",
                            TripId = 11
                        },
                        new
                        {
                            Id = 152,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip1.jpg",
                            TripId = 12
                        },
                        new
                        {
                            Id = 153,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip2.jpg",
                            TripId = 13
                        },
                        new
                        {
                            Id = 154,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip9.jpg",
                            TripId = 14
                        },
                        new
                        {
                            Id = 155,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip9.jpg",
                            TripId = 15
                        },
                        new
                        {
                            Id = 156,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip1.jpg",
                            TripId = 16
                        },
                        new
                        {
                            Id = 157,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip10.jpg",
                            TripId = 17
                        },
                        new
                        {
                            Id = 158,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip5.jpg",
                            TripId = 18
                        },
                        new
                        {
                            Id = 159,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip1.jpg",
                            TripId = 19
                        },
                        new
                        {
                            Id = 160,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip9.jpg",
                            TripId = 20
                        },
                        new
                        {
                            Id = 161,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip10.jpg",
                            TripId = 21
                        },
                        new
                        {
                            Id = 162,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip9.jpg",
                            TripId = 22
                        },
                        new
                        {
                            Id = 163,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip1.jpg",
                            TripId = 23
                        },
                        new
                        {
                            Id = 164,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip10.jpg",
                            TripId = 24
                        },
                        new
                        {
                            Id = 165,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip7.png",
                            TripId = 25
                        },
                        new
                        {
                            Id = 166,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip10.jpg",
                            TripId = 26
                        },
                        new
                        {
                            Id = 167,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip1.jpg",
                            TripId = 27
                        },
                        new
                        {
                            Id = 168,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip7.png",
                            TripId = 28
                        },
                        new
                        {
                            Id = 169,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip10.jpg",
                            TripId = 29
                        },
                        new
                        {
                            Id = 170,
                            Path = "https://globewanderimages.blob.core.windows.net/globe-wander-images/trip1.jpg",
                            TripId = 30
                        });
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.Rate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("TripID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("TripID");

                    b.ToTable("Rates");
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("AmenityId")
                        .HasColumnType("int");

                    b.Property<int>("Layout")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AmenityId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Layout = 2,
                            Name = "Small Room"
                        },
                        new
                        {
                            ID = 2,
                            Layout = 3,
                            Name = "Suite Room"
                        },
                        new
                        {
                            ID = 3,
                            Layout = 1,
                            Name = "Studio room"
                        });
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.RoomAmenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AmenityId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AmenityId");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomAmenities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmenityId = 1,
                            RoomId = 1
                        },
                        new
                        {
                            Id = 2,
                            AmenityId = 2,
                            RoomId = 1
                        },
                        new
                        {
                            Id = 3,
                            AmenityId = 3,
                            RoomId = 2
                        },
                        new
                        {
                            Id = 4,
                            AmenityId = 1,
                            RoomId = 3
                        },
                        new
                        {
                            Id = 5,
                            AmenityId = 2,
                            RoomId = 3
                        },
                        new
                        {
                            Id = 6,
                            AmenityId = 3,
                            RoomId = 3
                        });
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.TourSpot", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TourSpots");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Category = 3,
                            City = "Petra",
                            Country = "Jordan",
                            Description = "a place before thousands years",
                            Img = "https://images.pexels.com/photos/1631665/pexels-photo-1631665.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
                            Name = "Petra",
                            PhoneNumber = "078885423"
                        },
                        new
                        {
                            ID = 2,
                            Category = 3,
                            City = "Jerash",
                            Country = "Jordan",
                            Description = "A historical place that the Romanian civilization build before thousands years.",
                            Img = "https://c0.wallpaperflare.com/preview/705/707/822/jordan-jerash-oval-plaza-market.jpg",
                            Name = "Jerash",
                            PhoneNumber = "088782215"
                        },
                        new
                        {
                            ID = 3,
                            Category = 3,
                            City = "Irbid",
                            Country = "Jordan",
                            Description = "A historical place that the Romanian civilization build before thousands years. In the north of Jordan",
                            Img = "https://followinghadrianphotographycom.files.wordpress.com/2020/09/34509636386_2139ee3bc1_k.jpg?w=1075&h=712",
                            Name = "Um Qais",
                            PhoneNumber = "0788442521"
                        },
                        new
                        {
                            ID = 4,
                            Category = 4,
                            City = "Aqaba",
                            Country = "Jordan",
                            Description = "A spectacular desert in southern Jordan.",
                            Img = "https://c4.wallpaperflare.com/wallpaper/774/140/860/nature-landscape-sand-desert-dunes-hd-wallpaper-preview.jpg",
                            Name = "Wadi Rum",
                            PhoneNumber = "0788555444"
                        },
                        new
                        {
                            ID = 5,
                            Category = 3,
                            City = "Ajloun",
                            Country = "Jordan",
                            Description = "A 12th-century Muslim castle in northern Jordan.",
                            Img = "https://as1.ftcdn.net/v2/jpg/02/49/78/08/1000_F_249780853_qBrIwoai4WNGR0OSx4I6A3EZZ47cUN5B.jpg",
                            Name = "Ajloun Castle",
                            PhoneNumber = "0799111122"
                        },
                        new
                        {
                            ID = 6,
                            Category = 4,
                            City = "Amman",
                            Country = "Jordan",
                            Description = "The lowest point on Earth and famous for its high salt content.",
                            Img = "https://c4.wallpaperflare.com/wallpaper/884/827/830/dead-sea-coast-white-salt-blue-sea-wallpaper-preview.jpg",
                            Name = "Dead Sea",
                            PhoneNumber = "0777888999"
                        },
                        new
                        {
                            ID = 7,
                            Category = 4,
                            City = "Aqaba",
                            Country = "Jordan",
                            Description = "Beautiful beaches along the Red Sea.",
                            Img = "https://wallpapers.com/images/high/aqaba-jordan-shoreline-y69cto406g6r0i5c.webp",
                            Name = "Aqaba Beach",
                            PhoneNumber = "0799777666"
                        },
                        new
                        {
                            ID = 8,
                            Category = 3,
                            City = "Madaba",
                            Country = "Jordan",
                            Description = "Ancient hilltop fortress where John the Baptist was imprisoned.",
                            Img = "https://storage.kempinski.com/cdn-cgi/image/w=960,f=auto,g=auto,fit=scale-down/ki-cms-prod/images/4/5/5/3/313554-1-eng-GB/9e96e4717f7a-74342124_4K.jpg",
                            Name = "Wadi Al-Mujib",
                            PhoneNumber = "0777666555"
                        },
                        new
                        {
                            ID = 9,
                            Category = 4,
                            City = "Tafilah",
                            Country = "Jordan",
                            Description = "A diverse ecological system in southern Jordan.",
                            Img = "https://www.jordanbesttours.com/images/dana/jordan_nature_reserves_dana_full.jpg",
                            Name = "Dana Biosphere Reserve",
                            PhoneNumber = "0799888777"
                        });
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Activity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TourSpotID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TourSpotID");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activity = "walking",
                            Capacity = 30,
                            Cost = 20m,
                            Count = 0,
                            Description = "trip start at 8 am and going from Amman to Petra",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8049),
                            Name = "Petra ride",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8028),
                            TourSpotID = 1
                        },
                        new
                        {
                            Id = 2,
                            Activity = "visiting",
                            Capacity = 22,
                            Cost = 30m,
                            Count = 0,
                            Description = "Amman to Jerash with a trip manager who can speak many languages",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8056),
                            Name = "Jerash ride",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8055),
                            TourSpotID = 1
                        },
                        new
                        {
                            Id = 3,
                            Activity = "climbing",
                            Capacity = 40,
                            Cost = 40m,
                            Count = 0,
                            Description = "Amman to Irbid with a trip manager who can speak many languages",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8063),
                            Name = "Um-Qais ride",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8061),
                            TourSpotID = 1
                        },
                        new
                        {
                            Id = 4,
                            Activity = "desert safari",
                            Capacity = 20,
                            Cost = 50m,
                            Count = 0,
                            Description = "Explore the breathtaking Wadi Rum desert in Jordan.",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8067),
                            Name = "Wadi Rum Adventure",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8066),
                            TourSpotID = 2
                        },
                        new
                        {
                            Id = 5,
                            Activity = "swimming and mud baths",
                            Capacity = 15,
                            Cost = 25m,
                            Count = 0,
                            Description = "Relax at the world-famous Dead Sea and experience its healing properties.",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8073),
                            Name = "Dead Sea Relaxation",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8072),
                            TourSpotID = 2
                        },
                        new
                        {
                            Id = 6,
                            Activity = "scuba diving",
                            Capacity = 10,
                            Cost = 60m,
                            Count = 0,
                            Description = "Discover the vibrant marine life of the Red Sea in Aqaba.",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8078),
                            Name = "Aqaba Diving Expedition",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8077),
                            TourSpotID = 2
                        },
                        new
                        {
                            Id = 7,
                            Activity = "sightseeing",
                            Capacity = 25,
                            Cost = 15m,
                            Count = 0,
                            Description = "Explore the historical and cultural landmarks of Amman.",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8083),
                            Name = "Amman City Tour",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8082),
                            TourSpotID = 3
                        },
                        new
                        {
                            Id = 8,
                            Activity = "hiking",
                            Capacity = 12,
                            Cost = 35m,
                            Count = 0,
                            Description = "Trek through the stunning Dana Biosphere Reserve.",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8088),
                            Name = "Dana Biosphere Reserve Hike",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8087),
                            TourSpotID = 3
                        },
                        new
                        {
                            Id = 9,
                            Activity = "canyoning",
                            Capacity = 18,
                            Cost = 45m,
                            Count = 0,
                            Description = "Experience the adventure of canyoning in Wadi Mujib.",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8093),
                            Name = "Wadi Mujib Canyoning",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8092),
                            TourSpotID = 3
                        },
                        new
                        {
                            Id = 10,
                            Activity = "relaxation",
                            Capacity = 30,
                            Cost = 20m,
                            Count = 0,
                            Description = "Relax in the soothing hot springs of Ma'in.",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8097),
                            Name = "Ma'in Hot Springs Visit",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8096),
                            TourSpotID = 4
                        },
                        new
                        {
                            Id = 11,
                            Activity = "historical tour",
                            Capacity = 20,
                            Cost = 25m,
                            Count = 0,
                            Description = "Explore the historic Kerak Castle in Jordan.",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8103),
                            Name = "Kerak Castle Tour",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8102),
                            TourSpotID = 4
                        },
                        new
                        {
                            Id = 12,
                            Activity = "nature walk",
                            Capacity = 15,
                            Cost = 30m,
                            Count = 0,
                            Description = "Take a nature walk in the Ajloun Forest Reserve.",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8108),
                            Name = "Ajloun Forest Reserve Trek",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8107),
                            TourSpotID = 4
                        },
                        new
                        {
                            Id = 13,
                            Activity = "food tasting",
                            Capacity = 12,
                            Cost = 40m,
                            Count = 0,
                            Description = "Indulge in a culinary journey through Amman's cuisine.",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8112),
                            Name = "Amman Culinary Tour",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8111),
                            TourSpotID = 4
                        },
                        new
                        {
                            Id = 14,
                            Activity = "mosaic art",
                            Capacity = 25,
                            Cost = 20m,
                            Count = 0,
                            Description = "Discover the mosaic art of Madaba.",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8127),
                            Name = "Mosaic City Madaba",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8126),
                            TourSpotID = 4
                        },
                        new
                        {
                            Id = 15,
                            Activity = "historical tour",
                            Capacity = 18,
                            Cost = 30m,
                            Count = 0,
                            Description = "Explore the historic Ajloun Castle.",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8132),
                            Name = "Ajloun Castle Exploration",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8131),
                            TourSpotID = 4
                        },
                        new
                        {
                            Id = 16,
                            Activity = "beach relaxation",
                            Capacity = 20,
                            Cost = 55m,
                            Count = 0,
                            Description = "Relax on the beautiful beaches of Aqaba.",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8137),
                            Name = "Aqaba Beach Getaway",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8136),
                            TourSpotID = 5
                        },
                        new
                        {
                            Id = 17,
                            Activity = "snorkeling",
                            Capacity = 15,
                            Cost = 40m,
                            Count = 0,
                            Description = "Explore the underwater world of the Red Sea through snorkeling in Aqaba.",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8141),
                            Name = "Aqaba Snorkeling Adventure",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8140),
                            TourSpotID = 5
                        },
                        new
                        {
                            Id = 18,
                            Activity = "boat tour",
                            Capacity = 25,
                            Cost = 30m,
                            Count = 0,
                            Description = "View marine life through a glass-bottom boat tour in Aqaba.",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8146),
                            Name = "Aqaba Glass-Bottom Boat Tour",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8145),
                            TourSpotID = 5
                        },
                        new
                        {
                            Id = 19,
                            Activity = "desert adventure",
                            Capacity = 12,
                            Cost = 45m,
                            Count = 0,
                            Description = "Embark on an exciting jeep safari in the Aqaba desert.",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8150),
                            Name = "Aqaba Desert Jeep Safari",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8149),
                            TourSpotID = 6
                        },
                        new
                        {
                            Id = 20,
                            Activity = "nightclub hopping",
                            Capacity = 20,
                            Cost = 25m,
                            Count = 0,
                            Description = "Experience the vibrant nightlife of Aqaba.",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8155),
                            Name = "Aqaba Nightlife Tour",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8154),
                            TourSpotID = 6
                        },
                        new
                        {
                            Id = 21,
                            Activity = "historical tour",
                            Capacity = 15,
                            Cost = 60m,
                            Count = 0,
                            Description = "Explore the iconic Pyramids of Giza in Egypt.",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8160),
                            Name = "Pyramids of Giza Tour",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8159),
                            TourSpotID = 6
                        },
                        new
                        {
                            Id = 22,
                            Activity = "theater",
                            Capacity = 18,
                            Cost = 60m,
                            Count = 0,
                            Description = "Attend a Broadway show in the heart of New York City.",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8164),
                            Name = "Broadway Show Experience",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8163),
                            TourSpotID = 7
                        },
                        new
                        {
                            Id = 23,
                            Activity = "museum visit",
                            Capacity = 20,
                            Cost = 30m,
                            Count = 0,
                            Description = "Explore the museums along Museum Mile.",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8169),
                            Name = "Museum Mile Tour",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8168),
                            TourSpotID = 7
                        },
                        new
                        {
                            Id = 24,
                            Activity = "walking tour",
                            Capacity = 35,
                            Cost = 20m,
                            Count = 0,
                            Description = "Take a scenic walk across the historic Brooklyn Bridge.",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8175),
                            Name = "Brooklyn Bridge Walk",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8173),
                            TourSpotID = 7
                        },
                        new
                        {
                            Id = 25,
                            Activity = "sightseeing",
                            Capacity = 30,
                            Cost = 35m,
                            Count = 0,
                            Description = "Enjoy panoramic views from the Empire State Building.",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8181),
                            Name = "Empire State Building Observation Deck",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8180),
                            TourSpotID = 8
                        },
                        new
                        {
                            Id = 26,
                            Activity = "boat tour",
                            Capacity = 25,
                            Cost = 45m,
                            Count = 0,
                            Description = "Cruise along the Hudson River and see Manhattan's skyline.",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8185),
                            Name = "Hudson River Boat Tour",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8184),
                            TourSpotID = 8
                        },
                        new
                        {
                            Id = 27,
                            Activity = "cultural tour",
                            Capacity = 20,
                            Cost = 45m,
                            Count = 0,
                            Description = "Immerse in the rich culture of Ubud, Bali.",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8194),
                            Name = "Ubud Cultural Experience",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8192),
                            TourSpotID = 8
                        },
                        new
                        {
                            Id = 28,
                            Activity = "snorkeling",
                            Capacity = 30,
                            Cost = 60m,
                            Count = 0,
                            Description = "Explore the vibrant marine life of the Red Sea in Aqaba",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8199),
                            Name = "Red Sea Adventure",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8197),
                            TourSpotID = 9
                        },
                        new
                        {
                            Id = 29,
                            Activity = "off-roading",
                            Capacity = 20,
                            Cost = 50m,
                            Count = 0,
                            Description = "Experience the thrill of a desert adventure in Aqaba",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8203),
                            Name = "Desert Safari",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8202),
                            TourSpotID = 9
                        },
                        new
                        {
                            Id = 30,
                            Activity = "scuba diving",
                            Capacity = 15,
                            Cost = 70m,
                            Count = 0,
                            Description = "Discover submerged historical sites in the Red Sea",
                            EndDate = new DateTime(2023, 10, 23, 20, 33, 41, 354, DateTimeKind.Utc).AddTicks(8236),
                            Name = "Historical Dive",
                            StartDate = new DateTime(2023, 10, 23, 23, 33, 41, 354, DateTimeKind.Local).AddTicks(8220),
                            TourSpotID = 9
                        });
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.UPDATEBOOKINGTEMP", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdForUpdate")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("UPDATEBOOKINGTEMPs");
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.UPDATEBOOKINGTRIP", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdForUpdate")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPersons")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("UPDATEBOOKINGTRIPs");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "admin manager",
                            ConcurrencyStamp = "00000000-0000-0000-0000-000000000000",
                            Name = "Admin Manager",
                            NormalizedName = "ADMIN MANAGER"
                        },
                        new
                        {
                            Id = "trip manager",
                            ConcurrencyStamp = "00000000-0000-0000-0000-000000000000",
                            Name = "Trip Manager",
                            NormalizedName = "TRIP MANAGER"
                        },
                        new
                        {
                            Id = "hotel manager",
                            ConcurrencyStamp = "00000000-0000-0000-0000-000000000000",
                            Name = "Hotel Manager",
                            NormalizedName = "HOTEL MANAGER"
                        },
                        new
                        {
                            Id = "user",
                            ConcurrencyStamp = "00000000-0000-0000-0000-000000000000",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "1",
                            RoleId = "admin manager"
                        },
                        new
                        {
                            UserId = "2",
                            RoleId = "hotel manager"
                        },
                        new
                        {
                            UserId = "3",
                            RoleId = "trip manager"
                        },
                        new
                        {
                            UserId = "4",
                            RoleId = "user"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.BookingRoom", b =>
                {
                    b.HasOne("Globe_Wander_Final.Models.HotelRoom", "HotelRooms")
                        .WithOne("BookingRoom")
                        .HasForeignKey("Globe_Wander_Final.Models.BookingRoom", "HotelID", "RoomNumber")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("HotelRooms");
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.BookingTrip", b =>
                {
                    b.HasOne("Globe_Wander_Final.Models.Trip", "Trip")
                        .WithMany("BookingTrips")
                        .HasForeignKey("TripID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.Hotel", b =>
                {
                    b.HasOne("Globe_Wander_Final.Models.Facility", null)
                        .WithMany("HotelFacilities")
                        .HasForeignKey("FacilityId");

                    b.HasOne("Globe_Wander_Final.Models.TourSpot", "TourSpot")
                        .WithMany("Hotels")
                        .HasForeignKey("TourSpotID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TourSpot");
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.HotelFacility", b =>
                {
                    b.HasOne("Globe_Wander_Final.Models.Facility", "Facility")
                        .WithMany()
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Globe_Wander_Final.Models.Hotel", "Hotel")
                        .WithMany("HotelFacilities")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facility");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.HotelRoom", b =>
                {
                    b.HasOne("Globe_Wander_Final.Models.Hotel", "Hotel")
                        .WithMany("HotelRoom")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Globe_Wander_Final.Models.Room", "Rooms")
                        .WithMany("HotelRooms")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.Image", b =>
                {
                    b.HasOne("Globe_Wander_Final.Models.Hotel", "Hotel")
                        .WithMany("HotelImages")
                        .HasForeignKey("HotelId");

                    b.HasOne("Globe_Wander_Final.Models.Trip", "Trip")
                        .WithMany("TripImages")
                        .HasForeignKey("TripId");

                    b.HasOne("Globe_Wander_Final.Models.HotelRoom", "HotelRoom")
                        .WithMany("HotelRoomImages")
                        .HasForeignKey("HotelRoomHotelID", "HotelRoomRoomNumber");

                    b.Navigation("Hotel");

                    b.Navigation("HotelRoom");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.Rate", b =>
                {
                    b.HasOne("Globe_Wander_Final.Models.Trip", "Trip")
                        .WithMany("Rates")
                        .HasForeignKey("TripID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.Room", b =>
                {
                    b.HasOne("Globe_Wander_Final.Models.Amenity", null)
                        .WithMany("RoomAmenities")
                        .HasForeignKey("AmenityId");
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.RoomAmenity", b =>
                {
                    b.HasOne("Globe_Wander_Final.Models.Amenity", "Amenity")
                        .WithMany()
                        .HasForeignKey("AmenityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Globe_Wander_Final.Models.Room", "Room")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amenity");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.Trip", b =>
                {
                    b.HasOne("Globe_Wander_Final.Models.TourSpot", "TourSpots")
                        .WithMany("Trips")
                        .HasForeignKey("TourSpotID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TourSpots");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Globe_Wander_Final.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Globe_Wander_Final.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Globe_Wander_Final.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Globe_Wander_Final.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.Amenity", b =>
                {
                    b.Navigation("RoomAmenities");
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.Facility", b =>
                {
                    b.Navigation("HotelFacilities");
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.Hotel", b =>
                {
                    b.Navigation("HotelFacilities");

                    b.Navigation("HotelImages");

                    b.Navigation("HotelRoom");
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.HotelRoom", b =>
                {
                    b.Navigation("BookingRoom");

                    b.Navigation("HotelRoomImages");
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.Room", b =>
                {
                    b.Navigation("HotelRooms");

                    b.Navigation("RoomAmenities");
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.TourSpot", b =>
                {
                    b.Navigation("Hotels");

                    b.Navigation("Trips");
                });

            modelBuilder.Entity("Globe_Wander_Final.Models.Trip", b =>
                {
                    b.Navigation("BookingTrips");

                    b.Navigation("Rates");

                    b.Navigation("TripImages");
                });
#pragma warning restore 612, 618
        }
    }
}
